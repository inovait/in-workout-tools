{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Adding-the-WorkoutFeature-as-a-dependency","level":2,"type":"heading","text":"Adding the WorkoutFeature as a dependency"},{"inlineContent":[{"text":"To use the WorkoutFeature in a SwiftPM project, add it to the dependencies of your","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Package.swift and specify the "},{"type":"codeVoice","code":"WorkoutFeature"},{"type":"text","text":" product in any targets that need access to"},{"type":"text","text":" "},{"text":"the library:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let package = Package(","  dependencies: [","    .package(","      url: \"https:\/\/github.com\/inovait\/in-workout-tools.git\",","      from: \"1.0.4\"","    ),","  ],","  targets: [","    .target(","      name: \"<target-name>\",","      dependencies: [","        .product(","          name: \"WorkoutFramework\",","          package: \"InWorkoutTools\"","        )","      ]","    )","  ]",")"]},{"level":2,"anchor":"Simple-workout-example","type":"heading","text":"Simple workout example"},{"inlineContent":[{"type":"text","text":"In this example the workout is started and finished after 10 seconds."}],"type":"paragraph"},{"syntax":"swift","code":["import SwiftUI","import FeatureWorkout","import ComposableArchitecture","","public struct ContentView: View {","    let store = Store(initialState: WorkoutFeature.State(roundIdx: 0, currentExercise: .init(exercise: .init(id: \"demo\", name: \"Duration 10 sec\", type: .exercise, durationInMillis: 10 * 1000, idx: 1, exerciseRepetition: 0, reps: 0, loopSubExercises: false, canSkipExercise: false, subExercises: []), currentTime: 0))) {","        WorkoutFeature()","    }","    ","    public init() {}","","    public var body: some View {","        VStack() {","            Text(store.currentExercise.exercise.name)","                .padding(.top, 40)","                .padding(.bottom, 20)","                .font(.system(size: 24, weight: .bold))","            ","            Text(store.totalTime.toSeconds().description)","            ","            if (store.status == .ended) {","                Text(\"Workout completed\")","                    .padding(.top, 40)","                    .padding(.bottom, 20)","                    .font(.system(size: 24, weight: .bold))","            }","            ","            Spacer()","        }.task {","            store.send(.view(.onPrepare(store.currentExercise.exercise.name)))","            store.send(.view(.onStart))","        }","    }","}"],"type":"codeListing"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/workoutframework\/gettingstarted"]}],"hierarchy":{"paths":[["doc:\/\/com.inova.WorkoutFramework\/documentation\/WorkoutFramework"]]},"abstract":[{"type":"text","text":"Learn how to integrate the Workout Feature into your project and write your first application."}],"identifier":{"url":"doc:\/\/com.inova.WorkoutFramework\/documentation\/WorkoutFramework\/GettingStarted","interfaceLanguage":"swift"},"metadata":{"title":"Getting started","roleHeading":"Article","modules":[{"name":"WorkoutFramework"}],"role":"article"},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"kind":"article","references":{"doc://com.inova.WorkoutFramework/documentation/WorkoutFramework":{"title":"WorkoutFramework","kind":"symbol","role":"collection","identifier":"doc:\/\/com.inova.WorkoutFramework\/documentation\/WorkoutFramework","abstract":[],"url":"\/documentation\/workoutframework","type":"topic"}}}